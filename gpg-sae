#!/usr/bin/env bash
#
# MIT License
#
# Copyright (c) 2020 codylane
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
set -e


# Global variables that can be set either in the environment or you can change
# the defaults here for your liking.
GPG_KEY_ID="${GPG_KEY_ID:-}"
DELETE_NON_ENCRYPTED_FILE_AFTER_ENCRYPT="${DELETE_NON_ENCRYPTED_FILE_AFTER_ENCRYPT:-Y}"

# this env var allows to TTY allocation so that you can enter your password
# when no TTY is present.
# https://www.gnupg.org/documentation/manuals/gnupg/Invoking-GPG_002dAGENT.html
export GPG_TTY=$(tty)

err() {

  echo "ERR: $* exiting" >&2
  exit 1

}

decrypt() {

  gpg -r ${GPG_KEY_ID} -d "${1}"

}


encrypt() {

  gpg -se -r "${GPG_KEY_ID}" -a "${1}"

}


[ -z "${GPG_KEY_ID}" ] && err "Please set GPG_KEY_ID environment variable. Example: \`GPG_KEY_ID=firstLast ${0}\`"

case "${1}" in

  decrypt|d)

    shift
    decrypt "${1}" > "${1%.asc}"

    ;;

  encrypt|e)

    shift
    encrypt "${1}"

    [ "${DELETE_NON_ENCRYPTED_FILE_AFTER_ENCRYPT}" == "Y" ] && rm -f "${1%.asc}" || true

    ;;

  *)

    echo "USAGE: ${0} [Action] <filename>"
    echo
    echo "[Action]"
    echo "  e|encrypt -> Encrypt filename"
    echo "  d|dcrypt  -> Decrypt filename"
    echo
    ;;

esac

exit $?
